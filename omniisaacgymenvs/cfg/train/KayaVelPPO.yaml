params:
  seed: ${...seed}

  algo:
    name: a2c_continuous

  model:
    name: continuous_a2c_logstd

  network:
    name: actor_critic_LCNN
    separate: False
    space:
      continuous:
        mu_activation: None
        sigma_activation: None

        mu_init:
          name: default
        sigma_init:
          name: const_initializer
          val: 0
        fixed_sigma: True
    mlp:
      units: [64]
      # units: [64, 64]
      activation: elu
      
      initializer:
        name: default
      regularizer:
        name: None
    rnn:
      name: lstm
      units: 64
      layers: 1
      before_mlp: True
      concat_input: True
      layer_norm: False
    lcnn:
      lidar_samples: 360 # input size (needs to be defined here and in KayaVel.yaml separately)
      out_features: 64 # ouput of FC layer
      kernels: [5, 3]
      strides: [2, 2]
      channels: [8, 4]
      initializer:
        name: default

  load_checkpoint: ${if:${...checkpoint},True,False} # flag which sets whether to load the checkpoint
  load_path: ${...checkpoint} # path to the checkpoint to load

  config:
    name: ${resolve_default:KayaVel,${....experiment}}
    full_experiment_name: ${.name}
    device: ${....rl_device}
    device_name: ${....rl_device}
    env_name: rlgpu
    multi_gpu: ${....multi_gpu}
    ppo: True
    mixed_precision: False
    normalize_input: True
    normalize_value: True
    num_actors: ${....task.env.numEnvs}
    reward_shaper:
      scale_value: 0.1
    normalize_advantage: True
    gamma: 0.99
    tau: 0.95
    learning_rate: 5e-4
    lr_schedule: adaptive
    kl_threshold: 0.008
    score_to_win: 20000
    max_epochs: ${resolve_default:300,${....max_iterations}}
    save_best_after: 30
    save_frequency: 10
    grad_norm: 1.0
    entropy_coef: 0.01
    truncate_grads: True
    e_clip: 0.2
    horizon_length: 128
    minibatch_size: 4096
    mini_epochs: 4
    critic_coef: 4
    clip_value: True
    seq_length: 4
    bounds_loss_coef: 0.0001